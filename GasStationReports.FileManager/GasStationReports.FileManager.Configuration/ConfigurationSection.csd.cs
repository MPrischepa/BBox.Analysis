//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GasStationReports.FileManager.Configuration
{
    
    
    /// <summary>
    /// The FileManagerConfiguration Configuration Section.
    /// </summary>
    public partial class FileManagerConfiguration : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the FileManagerConfiguration Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string FileManagerConfigurationSectionName = "fileManagerConfiguration";
        
        /// <summary>
        /// The XML path of the FileManagerConfiguration Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string FileManagerConfigurationSectionPath = "fileManagerConfiguration";
        
        /// <summary>
        /// Gets the FileManagerConfiguration instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public static global::GasStationReports.FileManager.Configuration.FileManagerConfiguration Instance
        {
            get
            {
                return ((global::GasStationReports.FileManager.Configuration.FileManagerConfiguration)(global::System.Configuration.ConfigurationManager.GetSection(global::GasStationReports.FileManager.Configuration.FileManagerConfiguration.FileManagerConfigurationSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GasStationReports.FileManager.Configuration.FileManagerConfiguration.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::GasStationReports.FileManager.Configuration.FileManagerConfiguration.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region InputDirectories Property
        /// <summary>
        /// The XML name of the <see cref="InputDirectories"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string InputDirectoriesPropertyName = "inputDirectories";
        
        /// <summary>
        /// Gets or sets the InputDirectories.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The InputDirectories.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GasStationReports.FileManager.Configuration.FileManagerConfiguration.InputDirectoriesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::GasStationReports.FileManager.Configuration.InputDirectoryCollection InputDirectories
        {
            get
            {
                return ((global::GasStationReports.FileManager.Configuration.InputDirectoryCollection)(base[global::GasStationReports.FileManager.Configuration.FileManagerConfiguration.InputDirectoriesPropertyName]));
            }
            set
            {
                base[global::GasStationReports.FileManager.Configuration.FileManagerConfiguration.InputDirectoriesPropertyName] = value;
            }
        }
        #endregion
        
        #region RemoveFiles Property
        /// <summary>
        /// The XML name of the <see cref="RemoveFiles"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string RemoveFilesPropertyName = "removeFiles";
        
        /// <summary>
        /// Gets or sets the RemoveFiles.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The RemoveFiles.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GasStationReports.FileManager.Configuration.FileManagerConfiguration.RemoveFilesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::GasStationReports.FileManager.Configuration.RemoveFileCollection RemoveFiles
        {
            get
            {
                return ((global::GasStationReports.FileManager.Configuration.RemoveFileCollection)(base[global::GasStationReports.FileManager.Configuration.FileManagerConfiguration.RemoveFilesPropertyName]));
            }
            set
            {
                base[global::GasStationReports.FileManager.Configuration.FileManagerConfiguration.RemoveFilesPropertyName] = value;
            }
        }
        #endregion
        
        #region ArchiveFilePattern Property
        /// <summary>
        /// The XML name of the <see cref="ArchiveFilePattern"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ArchiveFilePatternPropertyName = "archiveFilePattern";
        
        /// <summary>
        /// Gets or sets the ArchiveFilePattern.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The ArchiveFilePattern.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GasStationReports.FileManager.Configuration.FileManagerConfiguration.ArchiveFilePatternPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::GasStationReports.FileManager.Configuration.StringElement ArchiveFilePattern
        {
            get
            {
                return ((global::GasStationReports.FileManager.Configuration.StringElement)(base[global::GasStationReports.FileManager.Configuration.FileManagerConfiguration.ArchiveFilePatternPropertyName]));
            }
            set
            {
                base[global::GasStationReports.FileManager.Configuration.FileManagerConfiguration.ArchiveFilePatternPropertyName] = value;
            }
        }
        #endregion
        
        #region OutputDirectory Property
        /// <summary>
        /// The XML name of the <see cref="OutputDirectory"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string OutputDirectoryPropertyName = "outputDirectory";
        
        /// <summary>
        /// Gets or sets the OutputDirectory.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The OutputDirectory.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GasStationReports.FileManager.Configuration.FileManagerConfiguration.OutputDirectoryPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::GasStationReports.FileManager.Configuration.StringElement OutputDirectory
        {
            get
            {
                return ((global::GasStationReports.FileManager.Configuration.StringElement)(base[global::GasStationReports.FileManager.Configuration.FileManagerConfiguration.OutputDirectoryPropertyName]));
            }
            set
            {
                base[global::GasStationReports.FileManager.Configuration.FileManagerConfiguration.OutputDirectoryPropertyName] = value;
            }
        }
        #endregion
        
        #region ReplacementTextTemplates Property
        /// <summary>
        /// The XML name of the <see cref="ReplacementTextTemplates"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ReplacementTextTemplatesPropertyName = "replacementTextTemplates";
        
        /// <summary>
        /// Gets or sets the ReplacementTextTemplates.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The ReplacementTextTemplates.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GasStationReports.FileManager.Configuration.FileManagerConfiguration.ReplacementTextTemplatesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::GasStationReports.FileManager.Configuration.ReplacementTemplateCollection ReplacementTextTemplates
        {
            get
            {
                return ((global::GasStationReports.FileManager.Configuration.ReplacementTemplateCollection)(base[global::GasStationReports.FileManager.Configuration.FileManagerConfiguration.ReplacementTextTemplatesPropertyName]));
            }
            set
            {
                base[global::GasStationReports.FileManager.Configuration.FileManagerConfiguration.ReplacementTextTemplatesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace GasStationReports.FileManager.Configuration
{
    
    
    /// <summary>
    /// A collection of InputDirectoryElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::GasStationReports.FileManager.Configuration.InputDirectoryElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::GasStationReports.FileManager.Configuration.InputDirectoryCollection.InputDirectoryElementPropertyName)]
    public partial class InputDirectoryCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::GasStationReports.FileManager.Configuration.InputDirectoryElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string InputDirectoryElementPropertyName = "inputDirectory";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override string ElementName
        {
            get
            {
                return global::GasStationReports.FileManager.Configuration.InputDirectoryCollection.InputDirectoryElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::GasStationReports.FileManager.Configuration.InputDirectoryCollection.InputDirectoryElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::GasStationReports.FileManager.Configuration.InputDirectoryElement)(element)).Directory;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::GasStationReports.FileManager.Configuration.InputDirectoryElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::GasStationReports.FileManager.Configuration.InputDirectoryElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::GasStationReports.FileManager.Configuration.InputDirectoryElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::GasStationReports.FileManager.Configuration.InputDirectoryElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::GasStationReports.FileManager.Configuration.InputDirectoryElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::GasStationReports.FileManager.Configuration.InputDirectoryElement this[int index]
        {
            get
            {
                return ((global::GasStationReports.FileManager.Configuration.InputDirectoryElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::GasStationReports.FileManager.Configuration.InputDirectoryElement"/> with the specified key.
        /// </summary>
        /// <param name="directory">The key of the <see cref="global::GasStationReports.FileManager.Configuration.InputDirectoryElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::GasStationReports.FileManager.Configuration.InputDirectoryElement this[object directory]
        {
            get
            {
                return ((global::GasStationReports.FileManager.Configuration.InputDirectoryElement)(base.BaseGet(directory)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::GasStationReports.FileManager.Configuration.InputDirectoryElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="inputDirectory">The <see cref="global::GasStationReports.FileManager.Configuration.InputDirectoryElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Add(global::GasStationReports.FileManager.Configuration.InputDirectoryElement inputDirectory)
        {
            base.BaseAdd(inputDirectory);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::GasStationReports.FileManager.Configuration.InputDirectoryElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="inputDirectory">The <see cref="global::GasStationReports.FileManager.Configuration.InputDirectoryElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Remove(global::GasStationReports.FileManager.Configuration.InputDirectoryElement inputDirectory)
        {
            base.BaseRemove(this.GetElementKey(inputDirectory));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::GasStationReports.FileManager.Configuration.InputDirectoryElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::GasStationReports.FileManager.Configuration.InputDirectoryElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::GasStationReports.FileManager.Configuration.InputDirectoryElement GetItemAt(int index)
        {
            return ((global::GasStationReports.FileManager.Configuration.InputDirectoryElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::GasStationReports.FileManager.Configuration.InputDirectoryElement"/> with the specified key.
        /// </summary>
        /// <param name="directory">The key of the <see cref="global::GasStationReports.FileManager.Configuration.InputDirectoryElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::GasStationReports.FileManager.Configuration.InputDirectoryElement GetItemByKey(string directory)
        {
            return ((global::GasStationReports.FileManager.Configuration.InputDirectoryElement)(base.BaseGet(((object)(directory)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region BaseDirectory Property
        /// <summary>
        /// The XML name of the <see cref="BaseDirectory"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string BaseDirectoryPropertyName = "baseDirectory";
        
        /// <summary>
        /// Gets or sets the BaseDirectory.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The BaseDirectory.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GasStationReports.FileManager.Configuration.InputDirectoryCollection.BaseDirectoryPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string BaseDirectory
        {
            get
            {
                return ((string)(base[global::GasStationReports.FileManager.Configuration.InputDirectoryCollection.BaseDirectoryPropertyName]));
            }
            set
            {
                base[global::GasStationReports.FileManager.Configuration.InputDirectoryCollection.BaseDirectoryPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace GasStationReports.FileManager.Configuration
{
    
    
    /// <summary>
    /// The InputDirectoryElement Configuration Element.
    /// </summary>
    public partial class InputDirectoryElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Directory Property
        /// <summary>
        /// The XML name of the <see cref="Directory"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string DirectoryPropertyName = "directory";
        
        /// <summary>
        /// Gets or sets the Directory.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Directory.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GasStationReports.FileManager.Configuration.InputDirectoryElement.DirectoryPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Directory
        {
            get
            {
                return ((string)(base[global::GasStationReports.FileManager.Configuration.InputDirectoryElement.DirectoryPropertyName]));
            }
            set
            {
                base[global::GasStationReports.FileManager.Configuration.InputDirectoryElement.DirectoryPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace GasStationReports.FileManager.Configuration
{
    
    
    /// <summary>
    /// A collection of RemoveFile instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::GasStationReports.FileManager.Configuration.RemoveFile), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::GasStationReports.FileManager.Configuration.RemoveFileCollection.RemoveFilePropertyName)]
    public partial class RemoveFileCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::GasStationReports.FileManager.Configuration.RemoveFile"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string RemoveFilePropertyName = "removeFile";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override string ElementName
        {
            get
            {
                return global::GasStationReports.FileManager.Configuration.RemoveFileCollection.RemoveFilePropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::GasStationReports.FileManager.Configuration.RemoveFileCollection.RemoveFilePropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::GasStationReports.FileManager.Configuration.RemoveFile)(element)).FillePattern;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::GasStationReports.FileManager.Configuration.RemoveFile"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::GasStationReports.FileManager.Configuration.RemoveFile"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::GasStationReports.FileManager.Configuration.RemoveFile();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::GasStationReports.FileManager.Configuration.RemoveFile"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::GasStationReports.FileManager.Configuration.RemoveFile"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::GasStationReports.FileManager.Configuration.RemoveFile this[int index]
        {
            get
            {
                return ((global::GasStationReports.FileManager.Configuration.RemoveFile)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::GasStationReports.FileManager.Configuration.RemoveFile"/> with the specified key.
        /// </summary>
        /// <param name="fillePattern">The key of the <see cref="global::GasStationReports.FileManager.Configuration.RemoveFile"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::GasStationReports.FileManager.Configuration.RemoveFile this[object fillePattern]
        {
            get
            {
                return ((global::GasStationReports.FileManager.Configuration.RemoveFile)(base.BaseGet(fillePattern)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::GasStationReports.FileManager.Configuration.RemoveFile"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="removeFile">The <see cref="global::GasStationReports.FileManager.Configuration.RemoveFile"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Add(global::GasStationReports.FileManager.Configuration.RemoveFile removeFile)
        {
            base.BaseAdd(removeFile);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::GasStationReports.FileManager.Configuration.RemoveFile"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="removeFile">The <see cref="global::GasStationReports.FileManager.Configuration.RemoveFile"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Remove(global::GasStationReports.FileManager.Configuration.RemoveFile removeFile)
        {
            base.BaseRemove(this.GetElementKey(removeFile));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::GasStationReports.FileManager.Configuration.RemoveFile"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::GasStationReports.FileManager.Configuration.RemoveFile"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::GasStationReports.FileManager.Configuration.RemoveFile GetItemAt(int index)
        {
            return ((global::GasStationReports.FileManager.Configuration.RemoveFile)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::GasStationReports.FileManager.Configuration.RemoveFile"/> with the specified key.
        /// </summary>
        /// <param name="fillePattern">The key of the <see cref="global::GasStationReports.FileManager.Configuration.RemoveFile"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::GasStationReports.FileManager.Configuration.RemoveFile GetItemByKey(string fillePattern)
        {
            return ((global::GasStationReports.FileManager.Configuration.RemoveFile)(base.BaseGet(((object)(fillePattern)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace GasStationReports.FileManager.Configuration
{
    
    
    /// <summary>
    /// The RemoveFile Configuration Element.
    /// </summary>
    public partial class RemoveFile : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region FillePattern Property
        /// <summary>
        /// The XML name of the <see cref="FillePattern"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string FillePatternPropertyName = "fillePattern";
        
        /// <summary>
        /// Gets or sets the FillePattern.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The FillePattern.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GasStationReports.FileManager.Configuration.RemoveFile.FillePatternPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string FillePattern
        {
            get
            {
                return ((string)(base[global::GasStationReports.FileManager.Configuration.RemoveFile.FillePatternPropertyName]));
            }
            set
            {
                base[global::GasStationReports.FileManager.Configuration.RemoveFile.FillePatternPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace GasStationReports.FileManager.Configuration
{
    
    
    /// <summary>
    /// The StringElement Configuration Element.
    /// </summary>
    public partial class StringElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GasStationReports.FileManager.Configuration.StringElement.ValuePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::GasStationReports.FileManager.Configuration.StringElement.ValuePropertyName]));
            }
            set
            {
                base[global::GasStationReports.FileManager.Configuration.StringElement.ValuePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace GasStationReports.FileManager.Configuration
{
    
    
    /// <summary>
    /// A collection of ReplacementTemplateElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::GasStationReports.FileManager.Configuration.ReplacementTemplateCollection.ReplacementTemplateElementPropertyName)]
    public partial class ReplacementTemplateCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ReplacementTemplateElementPropertyName = "replacementTemplateElement";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override string ElementName
        {
            get
            {
                return global::GasStationReports.FileManager.Configuration.ReplacementTemplateCollection.ReplacementTemplateElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::GasStationReports.FileManager.Configuration.ReplacementTemplateCollection.ReplacementTemplateElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement)(element)).Index;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement this[int index]
        {
            get
            {
                return ((global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement"/> with the specified key.
        /// </summary>
        /// <param name="index">The key of the <see cref="global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement this[object index]
        {
            get
            {
                return ((global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement)(base.BaseGet(index)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="replacementTemplateElement">The <see cref="global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Add(global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement replacementTemplateElement)
        {
            base.BaseAdd(replacementTemplateElement);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="replacementTemplateElement">The <see cref="global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Remove(global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement replacementTemplateElement)
        {
            base.BaseRemove(this.GetElementKey(replacementTemplateElement));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement GetItemAt(int index)
        {
            return ((global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement"/> with the specified key.
        /// </summary>
        /// <param name="index">The key of the <see cref="global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement GetItemByKey(global::GasStationReports.FileManager.Configuration.Index index)
        {
            return ((global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement)(base.BaseGet(((object)(index)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace GasStationReports.FileManager.Configuration
{
    
    
    /// <summary>
    /// The ReplacementTemplateElement Configuration Element.
    /// </summary>
    public partial class ReplacementTemplateElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region SearchPattern Property
        /// <summary>
        /// The XML name of the <see cref="SearchPattern"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string SearchPatternPropertyName = "searchPattern";
        
        /// <summary>
        /// Gets or sets the SearchPattern.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The SearchPattern.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement.SearchPatternPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::GasStationReports.FileManager.Configuration.StringElement SearchPattern
        {
            get
            {
                return ((global::GasStationReports.FileManager.Configuration.StringElement)(base[global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement.SearchPatternPropertyName]));
            }
            set
            {
                base[global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement.SearchPatternPropertyName] = value;
            }
        }
        #endregion
        
        #region ReplacementPattern Property
        /// <summary>
        /// The XML name of the <see cref="ReplacementPattern"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ReplacementPatternPropertyName = "replacementPattern";
        
        /// <summary>
        /// Gets or sets the ReplacementPattern.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The ReplacementPattern.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement.ReplacementPatternPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::GasStationReports.FileManager.Configuration.StringElement ReplacementPattern
        {
            get
            {
                return ((global::GasStationReports.FileManager.Configuration.StringElement)(base[global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement.ReplacementPatternPropertyName]));
            }
            set
            {
                base[global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement.ReplacementPatternPropertyName] = value;
            }
        }
        #endregion
        
        #region TemplateDescription Property
        /// <summary>
        /// The XML name of the <see cref="TemplateDescription"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string TemplateDescriptionPropertyName = "templateDescription";
        
        /// <summary>
        /// Gets or sets the TemplateDescription.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The TemplateDescription.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement.TemplateDescriptionPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::GasStationReports.FileManager.Configuration.StringElement TemplateDescription
        {
            get
            {
                return ((global::GasStationReports.FileManager.Configuration.StringElement)(base[global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement.TemplateDescriptionPropertyName]));
            }
            set
            {
                base[global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement.TemplateDescriptionPropertyName] = value;
            }
        }
        #endregion
        
        #region Index Property
        /// <summary>
        /// The XML name of the <see cref="Index"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string IndexPropertyName = "index";
        
        /// <summary>
        /// Gets or sets the Index.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Index.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement.IndexPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual global::GasStationReports.FileManager.Configuration.Index Index
        {
            get
            {
                return ((global::GasStationReports.FileManager.Configuration.Index)(base[global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement.IndexPropertyName]));
            }
            set
            {
                base[global::GasStationReports.FileManager.Configuration.ReplacementTemplateElement.IndexPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace GasStationReports.FileManager.Configuration
{
    
    
    /// <summary>
    /// The Index Configuration Element.
    /// </summary>
    public partial class Index : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Ind Property
        /// <summary>
        /// The XML name of the <see cref="Ind"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string IndPropertyName = "ind";
        
        /// <summary>
        /// Gets or sets the Ind.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Ind.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::GasStationReports.FileManager.Configuration.Index.IndPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual int Ind
        {
            get
            {
                return ((int)(base[global::GasStationReports.FileManager.Configuration.Index.IndPropertyName]));
            }
            set
            {
                base[global::GasStationReports.FileManager.Configuration.Index.IndPropertyName] = value;
            }
        }
        #endregion
    }
}
