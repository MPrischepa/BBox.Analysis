//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BBox.Analysis.Configuration
{
    
    
    /// <summary>
    /// The FileDirectoryConfiguration Configuration Section.
    /// </summary>
    public partial class FileDirectoryConfiguration : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the FileDirectoryConfiguration Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string FileDirectoryConfigurationSectionName = "fileDirectoryConfiguration";
        
        /// <summary>
        /// The XML path of the FileDirectoryConfiguration Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string FileDirectoryConfigurationSectionPath = "fileDirectoryConfiguration";
        
        /// <summary>
        /// Gets the FileDirectoryConfiguration instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public static global::BBox.Analysis.Configuration.FileDirectoryConfiguration Instance
        {
            get
            {
                return ((global::BBox.Analysis.Configuration.FileDirectoryConfiguration)(global::System.Configuration.ConfigurationManager.GetSection(global::BBox.Analysis.Configuration.FileDirectoryConfiguration.FileDirectoryConfigurationSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::BBox.Analysis.Configuration.FileDirectoryConfiguration.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::BBox.Analysis.Configuration.FileDirectoryConfiguration.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region InFileDirectory Property
        /// <summary>
        /// The XML name of the <see cref="InFileDirectory"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string InFileDirectoryPropertyName = "inFileDirectory";
        
        /// <summary>
        /// Gets or sets the InFileDirectory.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The InFileDirectory.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::BBox.Analysis.Configuration.FileDirectoryConfiguration.InFileDirectoryPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string InFileDirectory
        {
            get
            {
                return ((string)(base[global::BBox.Analysis.Configuration.FileDirectoryConfiguration.InFileDirectoryPropertyName]));
            }
            set
            {
                base[global::BBox.Analysis.Configuration.FileDirectoryConfiguration.InFileDirectoryPropertyName] = value;
            }
        }
        #endregion
        
        #region OutFileDirectory Property
        /// <summary>
        /// The XML name of the <see cref="OutFileDirectory"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string OutFileDirectoryPropertyName = "outFileDirectory";
        
        /// <summary>
        /// Gets or sets the OutFileDirectory.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The OutFileDirectory.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::BBox.Analysis.Configuration.FileDirectoryConfiguration.OutFileDirectoryPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string OutFileDirectory
        {
            get
            {
                return ((string)(base[global::BBox.Analysis.Configuration.FileDirectoryConfiguration.OutFileDirectoryPropertyName]));
            }
            set
            {
                base[global::BBox.Analysis.Configuration.FileDirectoryConfiguration.OutFileDirectoryPropertyName] = value;
            }
        }
        #endregion
    }
}
